// Copyright (c) 2013 Titanium I.T. LLC. All rights reserved. See LICENSE.TXT for details.
(function() {
	"use strict";

	describe("UI", function() {
		var samples;
		var userCode;
		var showBuiltins;
		var showAllFunctions;
		var evaluate;
		var graph;

		beforeEach(function() {
			document.body.innerHTML +=
				"<ul id='samples'></ul>" +
				"<textarea id='userCode'></textarea>" +
				"<input id='evaluate' type='submit'>" +
				"<input id='builtins' type='checkbox'>" +
				"<input id='functions' type='checkbox'>" +
				"<div id='graph'></div>";

			samples = document.getElementById("samples");
			userCode = document.getElementById("userCode");
			evaluate = document.getElementById("evaluate");
			showBuiltins = document.getElementById("builtins");
			showAllFunctions = document.getElementById("functions");
			graph = document.getElementById("graph");

			jdls.ui.initialize({
				samplesList: samples,
				userCodeTextArea: userCode,
				evaluateButton: evaluate,
				showBuiltinsCheckbox: showBuiltins,
				showAllFunctionsCheckbox: showAllFunctions,
				graphDiv: graph
			});
		});

		afterEach(function() {
			document.body.removeChild(samples);
			document.body.removeChild(userCode);
			document.body.removeChild(evaluate);
			document.body.removeChild(showBuiltins);
			document.body.removeChild(showAllFunctions);
			document.body.removeChild(graph);
		});

		describe("initialization", function() {
			var defaultSample;

			beforeEach(function() {
				defaultSample = jdls.usercode.DEFAULT_SAMPLE;
			});

			it("populates sample buttons", function() {
				expect(samples.innerHTML).to.contain(defaultSample.name);
				//TODO: escape button names
			});

			it("puts default user code into text area", function() {
				expect(userCode.value).to.equal(defaultSample.code);
			});

			it("draws graph", function() {
				expect(graph.innerHTML).to.contain("Generated by graphviz");
			});
		});

		describe("options", function() {
			it("respects 'show builtins' checkbox", function() {
				userCode.value = "this.a = [];";
				showBuiltins.checked = true;
				evaluate.click();
				expect(graph.innerHTML).to.contain("Array()");
			});

			it("respects 'show all functions' checkbox", function() {
				userCode.value = "this.a = function a() {};";
				showAllFunctions.checked = true;
				evaluate.click();
				expect(graph.innerHTML).to.contain("constructor");
			});
		});

		describe("interactivity", function() {
			it("re-draws graph when evaluate button clicked", function() {
				userCode.value = "this.test_marker = 1;";
				evaluate.click();
				expect(graph.innerHTML).to.contain("test_marker");
			});

			it("populates text area and re-evaluates when sample button clicked", function() {
				userCode.value = "this.test_marker = 1;";
				evaluate.click();

				var firstSample = jdls.usercode.samples[Object.getOwnPropertyNames(jdls.usercode.samples)[0]];
				var firstSampleButton = samples.firstElementChild.firstElementChild;

				firstSampleButton.click();
				expect(userCode.value).to.equal(firstSample.code);
				expect(graph.innerHTML).to.not.contain("test_marker");
			});


			it("displays exception when bad code entered", function() {
				userCode.value = "asdf";
				evaluate.click();
				expect(graph.innerHTML).to.contain("<pre>ReferenceError");
			});
		});

	});

}());