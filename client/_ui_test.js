// Copyright (c) 2013 Titanium I.T. LLC. All rights reserved. See LICENSE.TXT for details.
(function() {
	"use strict";

	describe("UI", function() {
		var userCode;
		var evaluate;
		var graph;

		beforeEach(function() {
			document.body.innerHTML +=
				"<textarea id='userCode'></textarea>" +
				"<input id='evaluate' type='submit'>" +
				"<div id='graph'></div>";

			userCode = document.getElementById("userCode");
			evaluate = document.getElementById("evaluate");
			graph = document.getElementById("graph");

			jdls.ui.initialize(userCode, evaluate, graph);
		});

		afterEach(function() {
			document.body.removeChild(userCode);
			document.body.removeChild(evaluate);
			document.body.removeChild(graph);
		});

		describe("initialization", function() {
			var defaultSample;

			beforeEach(function() {
				defaultSample = jdls.usercode.samples.DEFAULT.code;
			});

			it("puts default user code into text area", function() {
				expect(userCode.value).to.equal(defaultSample);
			});

			it("draws graph", function() {
				var object = jdls.usercode.evaluate(defaultSample);
				expect(graph.innerHTML).to.contain("Generated by graphviz");
			});
		});

		describe("evaluation", function() {
			it("re-draws graph when button clicked", function() {
				userCode.value = "this.a = 1;";
				evaluate.click();
				expect(graph.innerHTML).to.contain("a: 1");
			});

			it("displays exception when bad code entered", function() {
				userCode.value = "asdf";
				evaluate.click();
				expect(graph.innerHTML).to.contain("<pre>ReferenceError");
			});
		});

		function click(element) {
			var event = document.createEvent("MouseEvent");
			event.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			element.dispatchEvent(event);
		}

	});

}());